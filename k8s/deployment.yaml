apiVersion: apps/v1
kind: Deployment
metadata:
  name: svc-matching-engine
  namespace: trading
  annotations:
    argocd.argoproj.io/sync-wave: "40"
spec:
  replicas: 2
  selector: { matchLabels: { app: svc-matching-engine } }
  template:
    metadata:
      labels: { app: svc-matching-engine, hotpath: "true" }
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      priorityClassName: hotpath-high
      nodeSelector: { nodepool: perf }
      tolerations:
        - key: "workload"
          operator: "Equal"
          value: "hotpath"
          effect: "NoSchedule"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector: { matchLabels: { app: svc-matching-engine } }
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["svc-matching-engine"]
              topologyKey: kubernetes.io/hostname
      containers:
        - name: app
          image: ghcr.io/2025-demo-01/svc-matching-engine:0.1.0
          ports: [ { name: metrics, containerPort: 9090 } ]
          env:
            - name: POD_NAME                                     # [ADDED]
              valueFrom: { fieldRef: { fieldPath: metadata.name } }
            - name: KAFKA_BROKERS
              valueFrom: { secretKeyRef: { name: kafka-secret, key: brokers } }
            - name: CLICKHOUSE_URL
              valueFrom: { secretKeyRef: { name: clickhouse-secret, key: url } }
            - { name: KAFKA_SASL_USER, valueFrom: { secretKeyRef: { name: matching-secret, key: KAFKA_USERNAME } } }  # [ADDED]
            - { name: KAFKA_SASL_PASS, valueFrom: { secretKeyRef: { name: matching-secret, key: KAFKA_PASSWORD } } }  # [ADDED]
            - name: BATCH_SIZE
              value: "500"
            - name: BATCH_WINDOW_MS
              value: "50"
            - name: ORDERS_IN_TOPIC
              value: "orders.in"
            - name: TRADES_OUT_TOPIC
              value: "trades.out"
          volumeMounts:                                          # [ADDED]
            - name: kafka-ca
              mountPath: /etc/kafka/ca
          resources:
            requests: { cpu: "2", memory: "1Gi" }
            limits:   { cpu: "2", memory: "1Gi" }
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile: { type: RuntimeDefault }
            capabilities: { drop: ["ALL"] }
      volumes:
        - name: kafka-ca                                        # [ADDED]
          secret:
            secretName: matching-secret
            items:
              - key: KAFKA_CA_CRT
                path: ca.crt
